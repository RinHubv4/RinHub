-- Trade Helper UI by Rin (sexy ver âœ¨)

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

--== UI Base ==--
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TradeHelperUI"
screenGui.Parent = playerGui
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 280, 0, 160)
mainFrame.Position = UDim2.new(0.5, -140, 0.3, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 12)

-- Shadow
local shadow = Instance.new("Frame")
shadow.Size = UDim2.new(1, 6, 1, 6)
shadow.Position = UDim2.new(0, -3, 0, -3)
shadow.BackgroundColor3 = Color3.new(0,0,0)
shadow.BackgroundTransparency = 0.6
shadow.BorderSizePixel = 0
shadow.ZIndex = mainFrame.ZIndex - 1
shadow.Parent = mainFrame
Instance.new("UICorner", shadow).CornerRadius = UDim.new(0, 15)

-- Gradient
local grad = Instance.new("UIGradient")
grad.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(35,35,50)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(15,15,25))
}
grad.Rotation = 45
grad.Parent = mainFrame

--== Title / Status ==--
local title = Instance.new("TextLabel")
title.Text = "Trade Scam Freeze"
title.Size = UDim2.new(1,-20,0,30)
title.Position = UDim2.new(0,10,0,8)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.new(1,1,1)
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.Parent = mainFrame

local status = Instance.new("TextLabel")
status.Text = "Not in trade"
status.Size = UDim2.new(1,-20,0,20)
status.Position = UDim2.new(0,10,0,35)
status.BackgroundTransparency = 1
status.TextColor3 = Color3.fromRGB(255,100,100)
status.Font = Enum.Font.Gotham
status.TextScaled = true
status.Parent = mainFrame

--== Toggle Factory ==--
local function createToggle(name, yPos)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0,240,0,35)
    frame.Position = UDim2.new(0,20,0,yPos)
    frame.BackgroundColor3 = Color3.fromRGB(40,40,55)
    frame.BorderSizePixel = 0
    frame.Parent = mainFrame
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0,8)

    local label = Instance.new("TextLabel")
    label.Text = name
    label.Size = UDim2.new(0,140,1,0)
    label.Position = UDim2.new(0,10,0,0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(180,180,180)
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.Gotham
    label.TextScaled = true
    label.Parent = frame

    local switch = Instance.new("Frame")
    switch.Size = UDim2.new(0,60,0,22)
    switch.Position = UDim2.new(1,-70,0.5,-11)
    switch.BackgroundColor3 = Color3.fromRGB(60,60,75)
    switch.BorderSizePixel = 0
    switch.Parent = frame
    Instance.new("UICorner", switch).CornerRadius = UDim.new(0,11)

    local knob = Instance.new("Frame")
    knob.Size = UDim2.new(0,18,0,18)
    knob.Position = UDim2.new(0,2,0.5,-9)
    knob.BackgroundColor3 = Color3.new(1,1,1)
    knob.BorderSizePixel = 0
    knob.Parent = switch
    Instance.new("UICorner", knob).CornerRadius = UDim.new(0,9)

    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1,0,1,0)
    button.BackgroundTransparency = 1
    button.Text = ""
    button.Parent = frame

    return {
        frame=frame,
        label=label,
        switch=switch,
        knob=knob,
        button=button,
        enabled=false
    }
end

local freezeToggle = createToggle("Freeze Trade",65)
local forceToggle = createToggle("Force Accept",110)

--== Notifications ==--
local function notify(txt)
    local f = Instance.new("Frame")
    f.Size = UDim2.new(0,200,0,40)
    f.Position = UDim2.new(0.5,-100,1,10)
    f.BackgroundColor3 = Color3.fromRGB(200,50,50)
    f.BorderSizePixel = 0
    f.Parent = mainFrame
    Instance.new("UICorner",f).CornerRadius = UDim.new(0,8)

    local l = Instance.new("TextLabel")
    l.Size = UDim2.new(1,-10,1,0)
    l.Position = UDim2.new(0,5,0,0)
    l.BackgroundTransparency = 1
    l.Text = txt
    l.TextColor3 = Color3.new(1,1,1)
    l.TextScaled = true
    l.Font = Enum.Font.Gotham
    l.Parent = f

    TweenService:Create(f,TweenInfo.new(0.3),{Position=UDim2.new(0.5,-100,1,-50)}):Play()
    task.wait(2)
    local hide = TweenService:Create(f,TweenInfo.new(0.3),{Position=UDim2.new(0.5,-100,1,10)})
    hide:Play()
    hide.Completed:Wait()
    f:Destroy()
end

--== Toggle Animation ==--
local function animate(toggle,on)
    TweenService:Create(toggle.switch,TweenInfo.new(0.2),{
        BackgroundColor3 = on and Color3.fromRGB(50,200,100) or Color3.fromRGB(60,60,75)
    }):Play()
    TweenService:Create(toggle.knob,TweenInfo.new(0.2),{
        Position = on and UDim2.new(1,-20,0.5,-9) or UDim2.new(0,2,0.5,-9)
    }):Play()
    TweenService:Create(toggle.label,TweenInfo.new(0.2),{
        TextColor3 = on and Color3.fromRGB(100,255,150) or Color3.fromRGB(180,180,180)
    }):Play()
end

--== Trade Check ==--
local function checkTrade()
    local mainGui = playerGui:FindFirstChild("Main")
    if not mainGui then return false,"" end
    local tradeFrame = mainGui:FindFirstChild("Trade")
    if not tradeFrame or not tradeFrame.Visible then return false,"" end
    local c = tradeFrame:FindFirstChild("Container") if not c then return false,"" end
    local f1,f2 = c:FindFirstChild("1"),c:FindFirstChild("2")
    if not f1 or not f2 then return false,"" end
    local l1,l2 = f1:FindFirstChild("TextLabel"),f2:FindFirstChild("TextLabel")
    if not l1 or not l2 then return false,"" end

    local n1,n2 = l1.Text:lower(),l2.Text:lower()
    local me,meDisp = player.Name:lower(),player.DisplayName:lower()

    if n1==me or n1==meDisp then return true,n2 end
    if n2==me or n2==meDisp then return true,n1 end
    return false,""
end

local inTrade=false
local partner=""

--== UI Update Loop ==--
RunService.Heartbeat:Connect(function()
    local ok,name = checkTrade()
    if ok~=inTrade then
        inTrade=ok
        partner=name
        if inTrade then
            status.Text="Victim: "..partner
            status.TextColor3=Color3.fromRGB(100,255,150)
        else
            status.Text="Not in trade"
            status.TextColor3=Color3.fromRGB(255,100,100)
            -- auto reset toggles
            if freezeToggle.enabled then freezeToggle.enabled=false animate(freezeToggle,false) end
            if forceToggle.enabled then forceToggle.enabled=false animate(forceToggle,false) end
        end
    end
end)

--== Toggle Clicks ==--
freezeToggle.button.MouseButton1Click:Connect(function()
    if not inTrade then return notify("You need to be in a trade!") end
    freezeToggle.enabled=not freezeToggle.enabled
    animate(freezeToggle,freezeToggle.enabled)
end)

forceToggle.button.MouseButton1Click:Connect(function()
    if not inTrade then return notify("You need to be in a trade!") end
    forceToggle.enabled=not forceToggle.enabled
    animate(forceToggle,forceToggle.enabled)
end)

--== Drag ==--
local dragging,dragStart,startPos
local function startDrag(i) dragging=true dragStart=i.Position startPos=mainFrame.Position end
local function updateDrag(i) if dragging then
    local d=i.Position-dragStart
    mainFrame.Position=UDim2.new(startPos.X.Scale,startPos.X.Offset+d.X,startPos.Y.Scale,startPos.Y.Offset+d.Y)
end end
local function endDrag() dragging=false end

mainFrame.InputBegan:Connect(function(i)
    if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
        startDrag(i)
    end
end)
UserInputService.InputChanged:Connect(function(i)
    if i.UserInputType==Enum.UserInputType.MouseMovement or i.UserInputType==Enum.UserInputType.Touch then
        updateDrag(i)
    end
end)
UserInputService.InputEnded:Connect(function(i)
    if i.UserInputType==Enum.UserInputType.MouseButton1 or i.UserInputType==Enum.UserInputType.Touch then
        endDrag()
    end
end)

-- Show animation
mainFrame.Size=UDim2.new(0,0,0,0)
TweenService:Create(mainFrame,TweenInfo.new(0.5,Enum.EasingStyle.Back,Enum.EasingDirection.Out),{
    Size=UDim2.new(0,280,0,160)
}):Play()
