local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TradeHelperUI"
screenGui.Parent = playerGui

-- Main Frame
local main = Instance.new("Frame")
main.Size = UDim2.new(0, 260, 0, 180)
main.Position = UDim2.new(0.5, -130, 0.5, -90)
main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
main.Active = true
main.Draggable = false -- handled manually
main.Parent = screenGui
main.ClipsDescendants = true

-- Rounded corners
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = main

-- Stroke
local stroke = Instance.new("UIStroke")
stroke.Color = Color3.fromRGB(0, 200, 255)
stroke.Thickness = 2
stroke.Parent = main

-- Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
titleBar.Parent = main

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

local titleLabel = Instance.new("TextLabel")
titleLabel.Text = "Trade Helper"
titleLabel.Size = UDim2.new(1, -60, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundTransparency = 1
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 14
titleLabel.Parent = titleBar

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Text = "-"
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -60, 0, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.TextSize = 18
minimizeButton.Parent = titleBar

-- Exit Button
local exitButton = Instance.new("TextButton")
exitButton.Text = "X"
exitButton.Size = UDim2.new(0, 30, 0, 30)
exitButton.Position = UDim2.new(1, -30, 0, 0)
exitButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
exitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
exitButton.Font = Enum.Font.GothamBold
exitButton.TextSize = 14
exitButton.Parent = titleBar

-- Content Frame
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -20, 1, -50)
contentFrame.Position = UDim2.new(0, 10, 0, 40)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = main

-- Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Text = "Not in Trade"
statusLabel.Size = UDim2.new(1, 0, 0, 20)
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.Font = Enum.Font.GothamBold
statusLabel.TextSize = 14
statusLabel.Parent = contentFrame

-- Helper: create toggle
local function createToggle(name, order)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Text = name .. ": OFF"
    button.Size = UDim2.new(1, 0, 0, 30)
    button.Position = UDim2.new(0, 0, 0, order * 35)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.Gotham
    button.TextSize = 14
    button.Parent = contentFrame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button

    return button
end

local freezeTradeButton = createToggle("Freeze Trade", 1)
local blockScamButton = createToggle("Block Scam", 2)
local autoAcceptButton = createToggle("Auto Accept", 3)

-- Add Best Fruit Button
local fruitButton = Instance.new("TextButton")
fruitButton.Text = "Add Best Fruit"
fruitButton.Size = UDim2.new(1, 0, 0, 30)
fruitButton.Position = UDim2.new(0, 0, 0, 140)
fruitButton.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
fruitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
fruitButton.Font = Enum.Font.GothamBold
fruitButton.TextSize = 14
fruitButton.Parent = contentFrame

local fruitCorner = Instance.new("UICorner")
fruitCorner.CornerRadius = UDim.new(0, 6)
fruitCorner.Parent = fruitButton

-- Minimize Behavior
local isMinimized = false
minimizeButton.MouseButton1Click:Connect(function()
    if isMinimized then
        TweenService:Create(main, TweenInfo.new(0.3), {Size = UDim2.new(0, 260, 0, 180)}):Play()
    else
        TweenService:Create(main, TweenInfo.new(0.3), {Size = UDim2.new(0, 260, 0, 30)}):Play()
    end
    isMinimized = not isMinimized
end)

exitButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- ⚡ checkTradeStatus fix
local function checkTradeStatus()
    local playerGui = player:WaitForChild("PlayerGui")
    local mainGui = playerGui:FindFirstChild("Main")
    if not mainGui then return false, "" end
    
    local tradeFrame = mainGui:FindFirstChild("Trade")
    if not tradeFrame or not tradeFrame.Visible then return false, "" end

    local container = tradeFrame:FindFirstChild("Container")
    if not container then return false, "" end
    
    local frame1 = container:FindFirstChild("1")
    local frame2 = container:FindFirstChild("2")
    if not frame1 or not frame2 then return false, "" end

    local player1Label = frame1:FindFirstChild("TextLabel")
    local player2Label = frame2:FindFirstChild("TextLabel")
    if not player1Label or not player2Label then return false, "" end

    local player1Text = player1Label.Text
    local player2Text = player2Label.Text

    local localName = string.lower(player.Name)
    local localDisplay = string.lower(player.DisplayName)
    local p1Lower = string.lower(player1Text)
    local p2Lower = string.lower(player2Text)

    if p1Lower == localName or p1Lower == localDisplay then
        return true, player2Text
    elseif p2Lower == localName or p2Lower == localDisplay then
        return true, player1Text
    else
        return false, ""
    end
end

-- Update Status + Toggle Enable
RunService.RenderStepped:Connect(function()
    local inTrade, partnerName = checkTradeStatus()
    if inTrade then
        statusLabel.Text = "Victim: " .. partnerName
        freezeTradeButton.Active = true
        blockScamButton.Active = true
        autoAcceptButton.Active = true
        fruitButton.Active = true
    else
        statusLabel.Text = "Not in Trade"
        freezeTradeButton.Active = false
        blockScamButton.Active = false
        autoAcceptButton.Active = false
        fruitButton.Active = false
    end
end)

-- Toggle handler
local function setupToggle(button)
    local isOn = false
    button.MouseButton1Click:Connect(function()
        local inTrade = checkTradeStatus()
        if not inTrade then
            -- Show temp message
            local msg = Instance.new("TextLabel")
            msg.Text = "You need to be in trade"
            msg.Size = UDim2.new(1, 0, 0, 20)
            msg.Position = UDim2.new(0, 0, 1, 0)
            msg.TextColor3 = Color3.fromRGB(255, 100, 100)
            msg.BackgroundTransparency = 1
            msg.Font = Enum.Font.GothamBold
            msg.TextSize = 12
            msg.Parent = contentFrame
            game:GetService("Debris"):AddItem(msg, 2)
            return
        end

        isOn = not isOn
        button.Text = button.Name .. ": " .. (isOn and "ON" or "OFF")
        TweenService:Create(button, TweenInfo.new(0.2),
            {BackgroundColor3 = isOn and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(60, 60, 60)}
        ):Play()
    end)
end

setupToggle(freezeTradeButton)
setupToggle(blockScamButton)
setupToggle(autoAcceptButton)

fruitButton.MouseButton1Click:Connect(function()
    local inTrade = checkTradeStatus()
    if not inTrade then
        local msg = Instance.new("TextLabel")
        msg.Text = "You need to be in trade"
        msg.Size = UDim2.new(1, 0, 0, 20)
        msg.Position = UDim2.new(0, 0, 1, 0)
        msg.TextColor3 = Color3.fromRGB(255, 100, 100)
        msg.BackgroundTransparency = 1
        msg.Font = Enum.Font.GothamBold
        msg.TextSize = 12
        msg.Parent = contentFrame
        game:GetService("Debris"):AddItem(msg, 2)
        return
    end
    print("Best Fruit Added")
end)

-- ✅ Dragging support (PC + Mobile)
local dragging = false
local dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = main.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or
                     input.UserInputType == Enum.UserInputType.Touch) then
        update(input)
    end
end)
