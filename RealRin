--// Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

--// UI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TradeHelperUI"
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 300, 0, 200)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

-- Mobile drag support
local dragging, dragInput, dragStart, startPos
mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

-- Title bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
titleBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -60, 1, 0)
titleLabel.Position = UDim2.new(0, 5, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Trade Helper"
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Parent = titleBar

-- Close button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 1, 0)
closeBtn.Position = UDim2.new(1, -30, 0, 0)
closeBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Parent = titleBar

closeBtn.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Minimize button
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 30, 1, 0)
minimizeBtn.Position = UDim2.new(1, -60, 0, 0)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
minimizeBtn.Text = "-"
minimizeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeBtn.Parent = titleBar

local minimized = false
minimizeBtn.MouseButton1Click:Connect(function()
    minimized = not minimized
    for _, child in ipairs(mainFrame:GetChildren()) do
        if child ~= titleBar then
            child.Visible = not minimized
        end
    end
    mainFrame.Size = minimized and UDim2.new(0, 300, 0, 30) or UDim2.new(0, 300, 0, 200)
end)

-- Status label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, 0, 0, 25)
statusLabel.Position = UDim2.new(0, 0, 0, 35)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Not in trade"
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
statusLabel.Parent = mainFrame

-- Toggles container
local togglesFrame = Instance.new("Frame")
togglesFrame.Size = UDim2.new(1, -10, 1, -70)
togglesFrame.Position = UDim2.new(0, 5, 0, 65)
togglesFrame.BackgroundTransparency = 1
togglesFrame.Parent = mainFrame

-- Create toggle function
local function createToggle(name)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0, 30)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.Text = name .. ": OFF"
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Parent = togglesFrame

    local enabled = false
    button.MouseButton1Click:Connect(function()
        local inTrade, victim = checkTradeStatus()
        if not inTrade then
            local warn = Instance.new("TextLabel")
            warn.Size = UDim2.new(1, 0, 0, 20)
            warn.Position = UDim2.new(0, 0, 1, -20)
            warn.BackgroundTransparency = 1
            warn.Text = "You need to be in trade"
            warn.TextColor3 = Color3.fromRGB(255, 50, 50)
            warn.Parent = mainFrame
            task.delay(2, function() warn:Destroy() end)
            return
        end
        enabled = not enabled
        button.Text = name .. ": " .. (enabled and "ON" or "OFF")
        button.BackgroundColor3 = enabled and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(60, 60, 60)
    end)
    return button
end

-- Toggles (Block Scam removed)
local toggles = { "Freeze Trade", "Add Fruit" }
for i, tName in ipairs(toggles) do
    local btn = createToggle(tName)
    btn.Position = UDim2.new(0, 0, 0, (i - 1) * 35)
end

-- Check trade status
function checkTradeStatus()
    local mainGui = playerGui:FindFirstChild("Main")
    if not mainGui then return false, "" end
    local tradeFrame = mainGui:FindFirstChild("Trade")
    if not tradeFrame or not tradeFrame.Visible then return false, "" end
    local container = tradeFrame:FindFirstChild("Container")
    if not container then return false, "" end
    local frame1, frame2 = container:FindFirstChild("1"), container:FindFirstChild("2")
    if not frame1 or not frame2 then return false, "" end
    local player1Label, player2Label = frame1:FindFirstChild("TextLabel"), frame2:FindFirstChild("TextLabel")
    if not player1Label or not player2Label then return false, "" end
    local player1Text, player2Text = player1Label.Text, player2Label.Text
    local localName, localDisplay = string.lower(player.Name), string.lower(player.DisplayName)
    if string.lower(player1Text) == localName or string.lower(player1Text) == localDisplay then
        return true, player2Text
    elseif string.lower(player2Text) == localName or string.lower(player2Text) == localDisplay then
        return true, player1Text
    else
        return false, ""
    end
end

-- Loop update status
task.spawn(function()
    while task.wait(1) do
        local inTrade, victim = checkTradeStatus()
        if inTrade then
            statusLabel.Text = "Victim: " .. victim
            statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
        else
            statusLabel.Text = "Not in trade"
            statusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
        end
    end
end)
